Cross-EM Word Aligner
Release 1.3
February 15, 2009

This is an implementation of the following paper:
Percy Liang, Ben Taskar, Dan Klein.  Alignment By Agreement.  NAACL, 2006.
http://www.cs.berkeley.edu/~pliang/papers/alignment-naacl2006.pdf
See naacl06-experiments/README for instructions on how to reproduce the NAACL06 results.

Compiling
=========
You need Java 1.5 and Ruby (for the training/testing scripts).  Type make.

Training
========
Create a configuration file (see sample.conf).
Each line in the configuration contains a field name and a value, separated by a tab.
All you really need to change is the train, enExt, and frExt fields.
Run
% ./crossTrain <configuration file> <output directory>
Everything should be saved to output directory.
  {int,union}.alignOutput.giza: intersection and union alignments (in GIZA format)
  {int,union}-100.alignOutput.txt: intersection and union alignments (first 100 in human-readable format)
For example, to train a model on the sample data, run:
% ./crossTrain sample.conf sample.out

With the default settings, two Model 1s will be trained jointly, one in each
direction, for 5 iterations.  These parameters will be used to train two HMMs
jointly.  You should get output to stdout roughly similar to sample.log.

Testing
=======
Run
% crossTest <output directory of training> <directory with some test files>
Creates the <output directory>.test directory.

Notes
=====
Make sure all your data files are in UTF-8.
All commands should be run out of the current directory.

============================================================
(C) Copyright 2006, Percy Liang

http://www.cs.berkeley.edu/~pliang

Permission is granted for anyone to copy, use, or modify these programs and
accompanying documents for purposes of research or education, provided this
copyright notice is retained, and note is made of any changes that have been
made.

These programs and documents are distributed without any warranty, express or
implied.  As the programs were written for research purposes only, they have
not been tested to the degree that would be advisable in any important
application.  All use of these programs is entirely at the user's own risk.

============================================================

Change history
--------------
1.0: initial release
1.1: changed sample.conf; added sample.log
1.2: added several ways to combine posteriors (-decodeForSimon)
1.3: no code was changed; only added instructions on how to reproduce the results from the NAACL06 paper.
